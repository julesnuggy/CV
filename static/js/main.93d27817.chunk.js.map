{"version":3,"sources":["components/aboutMe.tsx","components/headerDetail.tsx","components/header.tsx","components/project.tsx","components/blocker.tsx","components/projectPopup.tsx","components/experience.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/profile_photo.jpg"],"names":["AboutMe","screenSize","useState","isTruncated","setIsTruncated","truncateContents","element","classList","add","expandContents","remove","useEffect","indentedText","document","getElementsByClassName","className","onClick","contains","style","float","icon","HeaderDetail","itemText","link","children","href","target","rel","Header","src","profile_photo","alt","Project","data","index","name","role","from","to","Blocker","closePopup","CoreInformation","TechStack","techStack","map","t","idx","key","Description","description","ProjectPopup","addEventListener","event","onEscapePress","keyCode","handleEscapePress","size","Experience","expandedProjects","setExpandedProjects","handleProjectClick","includes","newArray","filter","p","handleClosePopup","employer","location","source","summary","projects","CSSTransition","timeout","in","classNames","library","faUser","faMapMarkedAlt","faLaptopCode","faAddressCard","faTimesCircle","faPlusSquare","faMinusSquare","fab","App","window","innerWidth","setScreenSize","d","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.93d27817.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport '../App.scss';\r\n\r\ntype aboutMeProps = {\r\n  screenSize: number;\r\n}\r\n\r\nconst AboutMe = ({screenSize}: aboutMeProps) => {\r\n  const [isTruncated, setIsTruncated] = useState(false);\r\n\r\n  const truncateContents = (element: Element) => {\r\n    setIsTruncated(true);\r\n    element.classList.add('truncated');\r\n  };\r\n\r\n  const expandContents = (element: Element) => {\r\n    setIsTruncated(false);\r\n    element.classList.remove('truncated');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const indentedText = document.getElementsByClassName('indented-text')[0];\r\n    if (screenSize <= 480) {\r\n      truncateContents(indentedText);\r\n    } else {\r\n      expandContents(indentedText);\r\n    }\r\n  },[screenSize]);\r\n\r\n  const truncateExpandContents = () => {\r\n    const indentedText = document.getElementsByClassName('indented-text')[0];\r\n    indentedText.classList.contains('truncated') ?\r\n      expandContents(indentedText) :\r\n      truncateContents(indentedText);\r\n  };\r\n\r\n  return (\r\n  <div className=\"about-me code-block dark-theme\" onClick={truncateExpandContents}>\r\n    <div className=\"tag\">{'<AboutMe>'}\r\n      <span style={{float: 'right'}}>\r\n        {isTruncated ?\r\n          <FontAwesomeIcon icon={['far', 'plus-square']} className=\"expand-truncate-icon\"/> :\r\n          <FontAwesomeIcon icon={['far', 'minus-square']} className=\"expand-truncate-icon\"/>\r\n        }\r\n      </span>\r\n    </div>\r\n    <div className=\"indented-text\">\r\n      I love being a software developer because I enjoy problem solving, working in a trusting and collaborative\r\n      environment, and bringing ideas into reality through elegant code. I began my professional career\r\n      as a change management consultant but in 2018 I decided I wanted a different career path. I had some very basic\r\n      experience of coding during my management consultant career - mostly writing procedural code in VBA for Excel to\r\n      automate long, repetitive and complex data manipulation and analysis tasks. Though crude and not object-oriented\r\n      (often consisting of functions which were hundreds of lines long...), I found that I most enjoyed these sorts of\r\n      projects. After much deliberation, I put that career aside and applied to Makers Academy to learn to code in just\r\n      4 months, and started my first job as a software developer just 1 month after graduating.\r\n    </div>\r\n    <div className=\"tag\">{'</AboutMe>'}</div>\r\n    <div className=\"tag-container\">\r\n      <div className=\"tag-wrapper\">\r\n        <div className=\"tag\">{'<CoreValues>'}</div>\r\n        <div className=\"indented-text\">\r\n          <li>Communication</li>\r\n          <li>Open Mindedness</li>\r\n          <li>Equality & Diversity</li>\r\n          <li>Courage to Experiment</li>\r\n        </div>\r\n        <div className=\"tag\">{'</CoreValues>'}</div>\r\n      </div>\r\n      <div className=\"tag-wrapper\">\r\n        <div className=\"tag\">{'<PersonalityTraits>'}</div>\r\n        <div className=\"indented-text\">\r\n          <li>Flexible & Adaptable</li>\r\n          <li>Focused & Determined</li>\r\n          <li>Problem Solver</li>\r\n          <li>Proactive</li>\r\n        </div>\r\n        <div className=\"tag\">{'</PersonalityTraits>'}</div>\r\n      </div>\r\n      <div className=\"tag-wrapper\">\r\n        <div className=\"tag\">{'<CodingPrinciples>'}</div>\r\n        <div className=\"indented-text\">\r\n          <li>Commit Often, Perfect Later</li>\r\n          <li>Robustness Through Tests</li>\r\n          <li>Code Reviews Help Everyone</li>\r\n          <li>Pairing Powers Productivity</li>\r\n        </div>\r\n        <div className=\"tag\">{'</CodingPrinciples>'}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)};\r\n\r\nexport default AboutMe;\r\n","import React, { ReactNode } from 'react';\r\nimport '../styles/header.scss';\r\n\r\ntype HeaderDetailProps = {\r\n  itemText: string;\r\n  link?: string;\r\n  children?: ReactNode;\r\n};\r\n\r\nconst HeaderDetail = ({itemText, link, children}: HeaderDetailProps) => {\r\n  return (\r\n    <div className=\"header-detail\">\r\n      <div className=\"icon-container\">\r\n        {children}\r\n      </div>\r\n      {link ? <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">{itemText}</a> : <div>{itemText}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderDetail;\r\n","import React from 'react';\r\n\r\nimport profile_photo from '../assets/profile_photo.jpg';\r\nimport HeaderDetail from './headerDetail';\r\nimport '../styles/header.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div>\r\n        <img className=\"profile-photo\" src={profile_photo} alt=\"Julian Ng\"/>\r\n      </div>\r\n      <div className=\"header-details\">\r\n        <HeaderDetail itemText=\"Julian Ng (He/Him)\">\r\n          <FontAwesomeIcon icon=\"user\" className=\"icon\" />\r\n        </HeaderDetail>\r\n        <HeaderDetail itemText=\"Full Stack Developer\">\r\n          <FontAwesomeIcon icon=\"laptop-code\" className=\"icon\" />\r\n        </HeaderDetail>\r\n        <HeaderDetail itemText=\"London, UK\">\r\n          <FontAwesomeIcon icon=\"map-marked-alt\" className=\"icon\" />\r\n        </HeaderDetail>\r\n        <HeaderDetail itemText=\"LinkedIn\" link=\"https://www.linkedin.com/in/julian-ng-43589420/\">\r\n          <FontAwesomeIcon icon={['fab', 'linkedin']} className=\"linkedin\" />\r\n        </HeaderDetail>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport { ProjectData } from '../data/experienceData';\r\nimport '../styles/project.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\ntype ProjectProps = {\r\n  data: ProjectData;\r\n  index: number;\r\n  onClick: (index: number) => void;\r\n};\r\n\r\nconst Project = ({data, index, onClick}: ProjectProps) => (\r\n  <div className=\"project\" onClick={() => onClick(index)}>\r\n    <div className=\"project-details\">\r\n      <div className=\"core-information\">\r\n        <div>{data.name}</div>\r\n        <div>{data.role}</div>\r\n        <div>{data.from} - {data.to}</div>\r\n        <FontAwesomeIcon icon={['far', 'plus-square']} className=\"project-popup-open\"/>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Project;\r\n","import React from 'react';\r\n\r\nimport '../styles/blocker.scss';\r\n\r\ntype BlockerProps = {\r\n  closePopup: () => void;\r\n}\r\n\r\nconst Blocker = ({closePopup}: BlockerProps) => (\r\n  <div className=\"blocker\" onClick={closePopup} />\r\n);\r\n\r\nexport default Blocker;\r\n","import React, { useEffect } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nimport { ProjectData } from '../data/experienceData';\r\nimport '../styles/project.scss';\r\nimport '../App.scss';\r\nimport Blocker from './blocker';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\ntype ProjectProps = {\r\n  data: ProjectData;\r\n  closePopup: () => void;\r\n};\r\n\r\ntype DataProps = {\r\n  data: ProjectData;\r\n};\r\n\r\nconst handleEscapePress = (event: KeyboardEvent, onEscapePress: () => void) => {\r\n  if (event.keyCode === 27) {\r\n    onEscapePress();\r\n  }\r\n};\r\n\r\nconst CoreInformation = ({data}: DataProps) => (\r\n  <>\r\n    <div className=\"tag\">{'<BasicInfo>'}</div>\r\n    <div className=\"indented-text\">\r\n      <div>{data.name}</div>\r\n      <div>{data.role}</div>\r\n      <div>{data.from} - {data.to}</div>\r\n    </div>\r\n    <div className=\"tag\">{'</BasicInfo>'}</div>\r\n  </>\r\n);\r\n\r\nconst TechStack = ({data}: DataProps) => (\r\n    <>\r\n      <div className=\"tag\">{'<TechStack>'}</div>\r\n      <div className=\"tech-stack-list\">\r\n        {data.techStack.map((t, idx) => <li className=\"tech-stack-item\" key={idx}>{t}</li>)}\r\n      </div>\r\n      <div className=\"tag\">{'</TechStack>'}</div>\r\n    </>\r\n);\r\n\r\nconst Description = ({data}: DataProps) => (\r\n  <>\r\n    <div className=\"tag\">{'<Description>'}</div>\r\n    <ReactMarkdown className=\"description indented-text\">\r\n      {data.description}\r\n    </ReactMarkdown>\r\n    <div className=\"tag\">{'</Description>'}</div>\r\n  </>\r\n);\r\n\r\nconst ProjectPopup = ({data, closePopup}: ProjectProps) => {\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', (event) => {\r\n      handleEscapePress(event, closePopup);\r\n    });\r\n  });\r\n\r\n  return (\r\n  <>\r\n    <Blocker closePopup={closePopup} />\r\n    <div className=\"project-popup code-block dark-theme\">\r\n      <div className=\"project-details\">\r\n        <div className=\"project-popup-close\" onClick={closePopup}>\r\n          <FontAwesomeIcon icon={['far', 'times-circle']} size=\"lg\" />\r\n        </div>\r\n        <CoreInformation data={data} />\r\n        <TechStack data={data} />\r\n        <Description data={data} />\r\n      </div>\r\n    </div>\r\n  </>\r\n); };\r\n\r\nexport default ProjectPopup ;\r\n","import React, { useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nimport Project from './project';\r\nimport ProjectPopup from './projectPopup';\r\nimport { ExperienceData } from '../data/experienceData';\r\nimport '../styles/experience.scss';\r\nimport '../App.scss';\r\n\r\ntype EmployerCardProps = {\r\n  data: ExperienceData;\r\n};\r\n\r\nconst Experience = ({data}: EmployerCardProps) => {\r\n  const [ expandedProjects, setExpandedProjects ] = useState([-1]);\r\n\r\n  const handleProjectClick = (index: number) => {\r\n    if (expandedProjects.includes(index)) {\r\n      const newArray = expandedProjects.filter((p) => p !== index);\r\n      setExpandedProjects(newArray);\r\n    } else {\r\n      setExpandedProjects([index]);\r\n    }\r\n  };\r\n\r\n  const handleClosePopup = () => (\r\n    setExpandedProjects([-1])\r\n  );\r\n\r\n  return (\r\n    <div className=\"experience\">\r\n      <div className=\"experience-title\">\r\n        {data.employer} || {data.from} - {data.to} || {data.location}\r\n      </div>\r\n      <ReactMarkdown className=\"code-block\" source={data.summary} />\r\n      <div className=\"project-container\">\r\n        {data.projects.map((p, idx) =>\r\n          <>\r\n            <Project data={p} key={`p-${idx}`} index={idx} onClick={handleProjectClick} />\r\n            <CSSTransition timeout={200} in={expandedProjects.includes(idx)} classNames=\"project-popup\" key={idx}>\r\n              <>\r\n                {\r\n                  expandedProjects.includes(idx) &&\r\n                  <ProjectPopup\r\n                    data={p}\r\n                    key={`pp-${idx}`}\r\n                    closePopup={handleClosePopup}\r\n                  />\r\n                }\r\n              </>\r\n            </CSSTransition>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Experience;\r\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faUser, faMapMarkedAlt, faLaptopCode, faAddressCard } from '@fortawesome/free-solid-svg-icons';\nimport { faTimesCircle, faPlusSquare, faMinusSquare } from '@fortawesome/free-regular-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\n\nimport AboutMe from './components/aboutMe';\nimport Header from './components/header';\nimport Experience from './components/experience';\nimport data from './data/experienceData.json';\n\nlibrary.add(faUser, faMapMarkedAlt, faLaptopCode, faAddressCard, faTimesCircle, faPlusSquare, faMinusSquare, fab);\n\nconst App: React.FC = () => {\n  const [screenSize, setScreenSize] = useState(window.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => setScreenSize(window.innerWidth));\n  });\n\n  return (\n    <div className=\"app-body\">\n      <Header />\n      <AboutMe screenSize={screenSize} />\n      <div className=\"experience-container\">\n        {data.map((d, idx) => <Experience data={d} key={`e-${idx}`} />)}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/profile_photo.33b9d558.jpg\";"],"sourceRoot":""}